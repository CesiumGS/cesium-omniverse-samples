#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (0, 0, 50000)
                double radius = 500
            }
            dictionary Perspective = {
                double3 position = (32966.64183253954, 25680.69178621557, 210104.49643920048)
                double3 target = (32951.01623688487, 25672.289317231764, 209983.44757052447)
            }
            dictionary Right = {
                double3 position = (-50000, 0, 0)
                double radius = 500
            }
            dictionary Top = {
                double3 position = (0, 50000, 0)
                double radius = 500
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "./Vancouver.usda"
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            bool "rtx:directLighting:domeLight:enabledInReflections" = 1
            bool "rtx:fog:enabled" = 1
            float3 "rtx:fog:fogColor" = (0.8901961, 0.7761547, 0.5163138)
            double "rtx:fog:fogColorIntensity" = 0.2
            double "rtx:fog:fogDistanceDensity" = 0.00003
            double "rtx:fog:fogEndDist" = 10000000
            double "rtx:fog:fogHeightDensity" = 0.05
            double "rtx:fog:fogHeightFalloff" = 0
            double "rtx:fog:fogStartDist" = 1000000
            double "rtx:fog:fogStartHeight" = 100000
            bool "rtx:indirectDiffuse:enabled" = 1
            bool "rtx:newDenoiser:enabled" = 1
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            bool "rtx:post:chromaticAberration:enabled" = 1
            double "rtx:post:chromaticAberration:strengthB" = 0.0015
            double "rtx:post:chromaticAberration:strengthG" = -0.0075
            double "rtx:post:chromaticAberration:strengthR" = -0.0055
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            bool "rtx:post:colorcorr:enabled" = 1
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1.1, 1.1, 1.1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            bool "rtx:post:colorgrad:enabled" = 1
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (1, 1, 1)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            double "rtx:post:histogram:whiteScale" = 1.029999976977706
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            float3 "rtx:post:lensFlares:cutoffPoint" = (2000, 2000, 2000)
            bool "rtx:post:lensFlares:enabled" = 1
            double "rtx:post:lensFlares:flareScale" = 0.4
            double "rtx:post:lensFlares:focalLength" = 17
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            bool "rtx:post:motionblur:enabled" = 1
            double "rtx:post:tonemap:irayReinhard:burnHighlights" = 0.7
            int "rtx:post:tonemap:op" = 7
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            string "rtx:rendermode" = "PathTracing"
            float3 "rtx:sceneDb:ambientLightColor" = (0, 0, 0)
        }
    }
    defaultPrim = "World"
    endTimeCode = 240
    metersPerUnit = 0.01
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "World"
{
    def "VancouverCamera" (
        instanceable = false
        prepend references = @./cameras/VancouverCamera.usda@
    )
    {
    }
}

def CesiumDataPrim "Cesium"
{
    double cesium:georeferenceOrigin:height = 0
    double cesium:georeferenceOrigin:latitude = 49.2827
    double cesium:georeferenceOrigin:longitude = -123.1207
    string cesium:projectDefaultIonAccessToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI1YTUwODczYi00MGU0LTRiNzgtOWE0ZC0zMTZiMmVhMmRiNGQiLCJpZCI6MjU5LCJpYXQiOjE2ODI5NjE1MTh9.KRadckL69tGb9V_az_ubjZA1z5jiyoGDH3yqkztdIRU"
    string cesium:projectDefaultIonAccessTokenId = ""
}

def Xform "Cesium_World_Terrain" (
    prepend apiSchemas = ["CesiumTilesetSchemaAPI"]
)
{
    float cesium:culledScreenSpaceError = 64
    bool cesium:enableFogCulling = 1
    bool cesium:enableFrustumCulling = 1
    bool cesium:enforceCulledScreenSpaceError = 1
    bool cesium:forbidHoles = 0
    string cesium:ionAccessToken = ""
    int64 cesium:ionAssetId = 1
    uint cesium:loadingDescendantLimit = 20
    uint64 cesium:maximumCachedBytes = 536870912
    float cesium:maximumScreenSpaceError = 16
    uint cesium:maximumSimultaneousTileLoads = 20
    bool cesium:preloadAncestors = 1
    bool cesium:preloadSiblings = 1
    bool cesium:smoothNormals = 0
    bool cesium:suspendUpdate = 0
    string cesium:url
    token visibility = "inherited"

    def CesiumImageryPrim "Bing_Maps_Aerial_imagery"
    {
        string cesium:ionAccessToken = ""
        int64 cesium:ionAssetId = 2
    }
}

over "OmniverseKit_Persp"
{
    float2 clippingRange = (1, 10000000000)
    float focalLength = 17
}

def "Environment_01"
{
    def DomeLight "sky" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        color3f color = (1, 1, 1)
        bool disableFogInteraction = 0
        float exposure = 0
        float intensity = 3000
        float shaping:cone:angle = 180
        float shaping:cone:softness
        float shaping:focus = 0
        color3f shaping:focusTint = (0, 0, 0)
        asset shaping:ies:file
        bool shaping:ies:normalize = 0
        float specular = 1
        asset texture:file = @../../shared_resources/skies/table_mountain_2_puresky_4k.exr@
        token texture:format = "latlong"
        token visibility = "inherited"
        bool visibleInPrimaryRay = 1
        double3 xformOp:rotateXYZ = (270, 214.0000031888485, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }
}

def Xform "Cesium_OSM_Buildings" (
    prepend apiSchemas = ["CesiumTilesetSchemaAPI"]
)
{
    float cesium:culledScreenSpaceError = 64
    bool cesium:enableFogCulling = 1
    bool cesium:enableFrustumCulling = 1
    bool cesium:enforceCulledScreenSpaceError = 1
    bool cesium:forbidHoles = 0
    string cesium:ionAccessToken = ""
    int64 cesium:ionAssetId = 96188
    uint cesium:loadingDescendantLimit = 20
    uint64 cesium:maximumCachedBytes = 536870912
    float cesium:maximumScreenSpaceError = 8
    uint cesium:maximumSimultaneousTileLoads = 20
    bool cesium:preloadAncestors = 1
    bool cesium:preloadSiblings = 1
    bool cesium:smoothNormals = 0
    bool cesium:suspendUpdate = 0
    string cesium:url
}

