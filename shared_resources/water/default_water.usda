#usda 1.0
(
    customLayerData = {
        dictionary MovieCaptureSettings = {
            int batch_count = 1
            string camera_name = "/World/Camera_03"
            int capture_every_nth_frames = 20
            bool capture_every_nth_frames_checked = 0
            int capture_frame_end = 0
            int capture_frame_start = 0
            string capture_name = "Capture"
            string capture_range = "Custom Range - Frames"
            double capture_time_end = 10
            double capture_time_start = 0
            string exr_compression_method = "zips"
            int fps = 24
            bool hdr_for_exr_checked = 0
            bool hdr_for_exr_visible = 0
            int iray_pathtrace_spp = 1
            int iray_subframes_per_frame = 32
            string movie_type = "Sequence"
            string output_format = ".png"
            string output_path = "C:/Users/ryan/Documents/Kit/shared/capture"
            bool overwrite_existing_frame_checked = 1
            bool pathtrace_mb_checked = 1
            double pathtrace_mb_frame_shutter_close = 0.5
            double pathtrace_mb_frame_shutter_open = 0
            int pathtrace_mb_subframes = 64
            int pathtrace_spp_per_iteration_mgpu = 1
            int pathtrace_spp_per_subframe = 1
            string queue_instance = "localhost Queue"
            int realtime_settle_latency = 500
            string render_preset = "RaytracedLighting"
            bool render_style = 1
            bool renumber_negtive_frames_checked = 0
            int resolution_aspect_ratio_selected = 0
            string resolution_aspect_ratios = '["16:9", "4:3"]'
            int resolution_height = 2160
            string resolution_type = "Custom"
            bool resolution_w_h_linked = 1
            int resolution_width = 3840
            int run_n_frames_before_start = 20
            bool run_n_frames_before_start_checked = 0
            bool save_alpha_checked = 0
            bool skip_upload_to_s3 = 0
            int start_delay_seconds = 10
            double sunstudy_end = 18
            int sunstudy_movie_minutes = 1
            int sunstudy_movie_seconds = 1
            double sunstudy_start = 6
            string task_comment = ""
            string task_priority = ""
            string task_type = "create-render"
            bool upload_to_s3 = 0
        }
        dictionary audioSettings = {
            double dopplerLimit = 2
            double dopplerScale = 1
            string enableDistanceDelay = "off"
            string enableDoppler = "off"
            double nonSpatialTimeScale = 1
            double spatialTimeScale = 1
            double speedOfSound = 340
        }
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (0, 0, 50000.00111758711)
                double radius = 500
                double3 target = (0, 0, 0)
            }
            dictionary Perspective = {
                double3 position = (71699.32987992952, 88655.71546119438, -227572.01543876348)
                double3 target = (-4.3655745685100555e-10, 1.1641532182693481e-10, -2.9103830456733704e-10)
            }
            dictionary Right = {
                double3 position = (-50000.00111758711, 0, 0)
                double radius = 500
                double3 target = (0, 0, 0)
            }
            dictionary Top = {
                double3 position = (-1173672.4289405937, 50000.00111758711, 227149.95701436268)
                double radius = 13722888
                double3 target = (-1173672.4289405937, 12779.168632156507, 227149.95701436268)
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            string authoring_layer = "./default_water.usd"
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            bool "rtx:ambientOcclusion:enabled" = 0
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            bool "rtx:directLighting:domeLight:enabledInReflections" = 1
            bool "rtx:fog:enabled" = 1
            float3 "rtx:fog:fogColor" = (0.042126577, 0.10496773, 0.21940929)
            double "rtx:fog:fogColorIntensity" = 1.5
            double "rtx:fog:fogDistanceDensity" = 0.00009999999747378752
            double "rtx:fog:fogEndDist" = 3000000
            double "rtx:fog:fogHeightDensity" = 0.00009999999747378752
            double "rtx:fog:fogHeightFalloff" = 0.00009999999747378752
            double "rtx:fog:fogStartHeight" = 20000
            double "rtx:indirectDiffuse:scalingFactor" = 5
            int "rtx:pathtracing:totalSpp" = 500
            int "rtx:post:aa:op" = 1
            bool "rtx:post:backgroundZeroAlpha:backgroundComposite" = 0
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            bool "rtx:post:backgroundZeroAlpha:outputAlphaInComposite" = 1
            bool "rtx:post:chromaticAberration:enabled" = 1
            double "rtx:post:chromaticAberration:strengthB" = -0.0010000000474974513
            double "rtx:post:chromaticAberration:strengthG" = -0.0020000000949949026
            double "rtx:post:chromaticAberration:strengthR" = -0.0010000000474974513
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1.1, 1.1, 1.1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (0.7, 0.7, 0.7)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            double "rtx:post:dof:anisotropy" = -0.30000001192092896
            double "rtx:post:dof:fNumber" = 2
            double "rtx:post:dof:focalLength" = 24
            double "rtx:post:dof:subjectDistance" = 160
            int "rtx:post:histogram:enabled" = 1
            double "rtx:post:histogram:whiteScale" = 1.7899999599903822
            double "rtx:post:lensDistortion:cameraFocalLength" = 24
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            double "rtx:post:lensFlares:blades" = 10
            float3 "rtx:post:lensFlares:cutoffPoint" = (1, 1, 1)
            bool "rtx:post:lensFlares:enabled" = 1
            double "rtx:post:lensFlares:fNumber" = 129
            double "rtx:post:lensFlares:flareScale" = 0.20000000298023224
            double "rtx:post:lensFlares:focalLength" = 65
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            bool "rtx:post:motionblur:enabled" = 1
            double "rtx:post:motionblur:numSamples" = 16
            double "rtx:post:tonemap:cameraShutter" = 56
            double "rtx:post:tonemap:fNumber" = 4.599999904632568
            double "rtx:post:tonemap:filmIso" = 293
            double "rtx:post:tonemap:irayReinhard:burnHighlights" = 0.07999999821186066
            double "rtx:post:tonemap:irayReinhard:crushBlacks" = 0.36000001430511475
            double "rtx:post:tonemap:op" = 7
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            bool "rtx:raytracing:fractionalCutoutOpacity" = 1
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            float3 "rtx:sceneDb:ambientLightColor" = (0.6978938, 0.7599975, 0.8270042)
            double "rtx:sceneDb:ambientLightIntensity" = 0.10000000149011612
            double "rtx:shadows:sampleCount" = 16
            double "rtx:translucency:maxRefractionBounces" = 2
        }
    }
    defaultPrim = "World"
    doc = """Generated from Composed Stage of root layer http://omniverse-content-production.s3-us-west-2.amazonaws.com/Samples/Flight/Flight.usd
"""
    endTimeCode = 14400
    metersPerUnit = 0.009999999776482582
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "World"
{
    token visibility = "inherited"

    def Mesh "Water"
    {
        float3[] extent = [(-50, 0, -50), (50, 0, 50)]
        int[] faceVertexCounts = [4]
        int[] faceVertexIndices = [0, 2, 3, 1]
        rel material:binding = </World/Water/Water_MDL02> (
            bindMaterialAs = "weakerThanDescendants"
        )
        normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-50, 0, -50), (50, 0, -50), (-50, 0, 50), (50, 0, 50)]
        float2[] primvars:st = [(0, 0), (0, 1), (1, 1), (1, 0)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
        token visibility = "inherited"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (50000, 50000, 50000)
        double3 xformOp:translate = (0, -3200, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

        def Material "Water_MDL02"
        {
            token outputs:mdl:displacement.connect = </World/Water/Water_MDL02/Shader.outputs:out>
            token outputs:mdl:surface.connect = </World/Water/Water_MDL02/Shader.outputs:out>
            token outputs:mdl:volume.connect = </World/Water/Water_MDL02/Shader.outputs:out>

            def Shader "Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @OmniPBR.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "OmniPBR"
                float inputs:albedo_add = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = -1
                        }
                        dictionary soft_range = {
                            float max = 1
                            float min = -1
                        }
                    }
                    displayGroup = "Albedo"
                    displayName = "Albedo Add"
                    doc = "Adds a constant value to the diffuse color "
                    hidden = false
                )
                float inputs:albedo_brightness = 1 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                        dictionary soft_range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Albedo"
                    displayName = "Albedo Brightness"
                    doc = "Multiplier for the diffuse color "
                    hidden = false
                )
                float inputs:bump_factor = 0.7 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 100000
                            float min = -100000
                        }
                        dictionary soft_range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Strength"
                    doc = "Strength of normal map"
                    hidden = false
                )
                float2 inputs:detail_texture_scale = (1, 1) (
                    customData = {
                        float2 default = (1, 1)
                        dictionary range = {
                            float2 max = (100000, 100000)
                            float2 min = (-100000, -100000)
                        }
                    }
                    displayGroup = "UV"
                    displayName = "Detail Texture Tiling"
                    doc = "Controls the repetition of the detail texture."
                    hidden = false
                )
                color3f inputs:diffuse_color_constant = (0.14889601, 0.188, 0.16931961) (
                    customData = {
                        float3 default = (0.2, 0.2, 0.2)
                        dictionary range = {
                            float3 max = (100000, 100000, 100000)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Albedo"
                    displayName = "Albedo Color"
                    doc = "This is the albedo base color"
                    hidden = false
                )
                asset inputs:diffuse_texture = @@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Albedo"
                    displayName = "Albedo Map"
                    hidden = false
                )
                color3f inputs:diffuse_tint = (0.10048247, 0.12382633, 0.14345992) (
                    customData = {
                        float3 default = (1, 1, 1)
                        dictionary range = {
                            float3 max = (100000, 100000, 100000)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Albedo"
                    displayName = "Color Tint"
                    doc = "When enabled, this color value is multiplied over the final albedo color"
                    hidden = false
                )
                float inputs:metallic_constant = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Reflectivity"
                    displayName = "Metallic Amount"
                    doc = "Metallic Material"
                    hidden = false
                )
                asset inputs:metallic_texture = @@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Reflectivity"
                    displayName = "Metallic Map"
                    hidden = false
                )
                asset inputs:normalmap_texture = @http://omniverse-content-production.s3-us-west-2.amazonaws.com/Samples/Flight/SubUSDs/textures/water2_normal.png@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                )
                bool inputs:project_uvw = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "UV"
                    displayName = "Enable Project UVW Coordinates"
                    doc = "When enabled, UV coordinates will be generated by projecting them from a coordinate system"
                    hidden = false
                )
                float inputs:reflection_roughness_constant = 0.2 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Reflectivity"
                    displayName = "Roughness Amount"
                    doc = "Higher roughness values lead to more blurry reflections"
                    hidden = false
                )
                float inputs:reflection_roughness_texture_influence = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Reflectivity"
                    displayName = "Roughness Map Influence"
                    doc = "Blends between the constant value and the lookup of the roughness texture"
                    hidden = false
                )
                asset inputs:reflectionroughness_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Reflectivity"
                    displayName = "Roughness Map"
                    hidden = false
                )
                float inputs:specular_level = 1 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                        dictionary soft_range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Reflectivity"
                    displayName = "Specular"
                    doc = "The specular level (intensity) of the material"
                    hidden = false
                )
                float inputs:texture_rotate = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 100000
                            float min = -100000
                        }
                    }
                    displayGroup = "UV"
                    displayName = "Texture Rotate"
                    doc = "Rotates angle of texture in degrees."
                    hidden = false
                )
                float2 inputs:texture_scale = (1000, 1000) (
                    customData = {
                        float2 default = (1, 1)
                        dictionary range = {
                            float2 max = (100000, 100000)
                            float2 min = (-100000, -100000)
                        }
                    }
                    displayGroup = "UV"
                    displayName = "Texture Tiling"
                    doc = "Controls the repetition of the texture."
                    hidden = false
                )
                bool inputs:world_or_object = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "UV"
                    displayName = "Enable World Space"
                    doc = "When enabled, uses world space for projection, otherwise object space is used"
                    hidden = false
                )
                token outputs:out
            }
        }
    }
}

def CesiumDataPrim "Cesium"
{
    string cesium:projectDefaultIonAccessToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJmYWViYTA1Yi1kNmY1LTRmZWYtYjk3My1hMmQyZGM3ODI3MzQiLCJpZCI6MjU5LCJpYXQiOjE2OTg4NDQ3NjR9.3vUmixeCI7_QD1nwN5aS_7UI3R36WETMLOunIjFie2E"
    string cesium:projectDefaultIonAccessTokenId = ""
}

def CesiumGeoreferencePrim "CesiumGeoreference"
{
    double cesium:georeferenceOrigin:height = 2250
    double cesium:georeferenceOrigin:latitude = 39.736401
    double cesium:georeferenceOrigin:longitude = -105.25737
}
